                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.0 #7066 (Jun 14 2012) (Linux)
                              4 ; This file was generated Fri Oct 24 21:14:10 2014
                              5 ;--------------------------------------------------------
                              6 	.module spi
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _P3_1
                             13 	.globl _P3_0
                             14 	.globl _P1_7
                             15 	.globl _P1_6
                             16 	.globl _P1_5
                             17 	.globl _P1_4
                             18 	.globl _P1_3
                             19 	.globl _P1_2
                             20 	.globl _P1_1
                             21 	.globl _P1_0
                             22 	.globl _P0_7
                             23 	.globl _P0_6
                             24 	.globl _P0_5
                             25 	.globl _P0_4
                             26 	.globl _P0_3
                             27 	.globl _P0_2
                             28 	.globl _P0_1
                             29 	.globl _P0_0
                             30 	.globl _I2CON_0
                             31 	.globl _I2CON_2
                             32 	.globl _I2CON_3
                             33 	.globl _I2CON_4
                             34 	.globl _I2CON_5
                             35 	.globl _I2CON_6
                             36 	.globl _SCON_7
                             37 	.globl _SCON_6
                             38 	.globl _SCON_5
                             39 	.globl _SCON_4
                             40 	.globl _SCON_3
                             41 	.globl _SCON_2
                             42 	.globl _SCON_1
                             43 	.globl _SCON_0
                             44 	.globl _IP0_0
                             45 	.globl _IP0_1
                             46 	.globl _IP0_2
                             47 	.globl _IP0_3
                             48 	.globl _IP0_4
                             49 	.globl _IP0_5
                             50 	.globl _IP0_6
                             51 	.globl _IP1_0
                             52 	.globl _IP1_1
                             53 	.globl _IP1_2
                             54 	.globl _IP1_6
                             55 	.globl _IEN1_0
                             56 	.globl _IEN1_1
                             57 	.globl _IEN1_2
                             58 	.globl _IEN0_0
                             59 	.globl _IEN0_1
                             60 	.globl _IEN0_2
                             61 	.globl _IEN0_3
                             62 	.globl _IEN0_4
                             63 	.globl _IEN0_5
                             64 	.globl _IEN0_6
                             65 	.globl _IEN0_7
                             66 	.globl _TCON_0
                             67 	.globl _TCON_1
                             68 	.globl _TCON_2
                             69 	.globl _TCON_3
                             70 	.globl _TCON_4
                             71 	.globl _TCON_5
                             72 	.globl _TCON_6
                             73 	.globl _TCON_7
                             74 	.globl _PSW_7
                             75 	.globl _PSW_6
                             76 	.globl _PSW_5
                             77 	.globl _PSW_4
                             78 	.globl _PSW_3
                             79 	.globl _PSW_2
                             80 	.globl _PSW_1
                             81 	.globl _PSW_0
                             82 	.globl _IEN1
                             83 	.globl _IP0H
                             84 	.globl _WFEED2
                             85 	.globl _WFEED1
                             86 	.globl _WDL
                             87 	.globl _WDCON
                             88 	.globl _TRIM
                             89 	.globl _TAMOD
                             90 	.globl _SSTAT
                             91 	.globl _RTCL
                             92 	.globl _RTCH
                             93 	.globl _RTCCON
                             94 	.globl _RSTSRC
                             95 	.globl _PT0AD
                             96 	.globl _PCONA
                             97 	.globl _P3M2
                             98 	.globl _P3M1
                             99 	.globl _P1M2
                            100 	.globl _P1M1
                            101 	.globl _P0M2
                            102 	.globl _P0M1
                            103 	.globl _KBPATN
                            104 	.globl _KBMASK
                            105 	.globl _KBCON
                            106 	.globl _IP1H
                            107 	.globl _IP1
                            108 	.globl _I2STAT
                            109 	.globl _I2SCLL
                            110 	.globl _I2SCLH
                            111 	.globl _I2DAT
                            112 	.globl _I2CON
                            113 	.globl _I2ADR
                            114 	.globl _FMDATA
                            115 	.globl _FMCON
                            116 	.globl _FMADRL
                            117 	.globl _FMADRH
                            118 	.globl _DIVM
                            119 	.globl _CMP2
                            120 	.globl _CMP1
                            121 	.globl _BRGCON
                            122 	.globl _BRGR1
                            123 	.globl _BRGR0
                            124 	.globl _SADEN
                            125 	.globl _SADDR
                            126 	.globl _AUXR1
                            127 	.globl _SBUF
                            128 	.globl _SCON
                            129 	.globl _IP0
                            130 	.globl _IEN0
                            131 	.globl _TH1
                            132 	.globl _TH0
                            133 	.globl _TL1
                            134 	.globl _TL0
                            135 	.globl _TMOD
                            136 	.globl _TCON
                            137 	.globl _PCON
                            138 	.globl _DPH
                            139 	.globl _DPL
                            140 	.globl _SP
                            141 	.globl _B
                            142 	.globl _ACC
                            143 	.globl _PSW
                            144 	.globl _P3
                            145 	.globl _P1
                            146 	.globl _P0
                            147 	.globl _spi_in_out
                            148 ;--------------------------------------------------------
                            149 ; special function registers
                            150 ;--------------------------------------------------------
                            151 	.area RSEG    (ABS,DATA)
   0000                     152 	.org 0x0000
                    0080    153 G$P0$0$0 == 0x0080
                    0080    154 _P0	=	0x0080
                    0090    155 G$P1$0$0 == 0x0090
                    0090    156 _P1	=	0x0090
                    00B0    157 G$P3$0$0 == 0x00b0
                    00B0    158 _P3	=	0x00b0
                    00D0    159 G$PSW$0$0 == 0x00d0
                    00D0    160 _PSW	=	0x00d0
                    00E0    161 G$ACC$0$0 == 0x00e0
                    00E0    162 _ACC	=	0x00e0
                    00F0    163 G$B$0$0 == 0x00f0
                    00F0    164 _B	=	0x00f0
                    0081    165 G$SP$0$0 == 0x0081
                    0081    166 _SP	=	0x0081
                    0082    167 G$DPL$0$0 == 0x0082
                    0082    168 _DPL	=	0x0082
                    0083    169 G$DPH$0$0 == 0x0083
                    0083    170 _DPH	=	0x0083
                    0087    171 G$PCON$0$0 == 0x0087
                    0087    172 _PCON	=	0x0087
                    0088    173 G$TCON$0$0 == 0x0088
                    0088    174 _TCON	=	0x0088
                    0089    175 G$TMOD$0$0 == 0x0089
                    0089    176 _TMOD	=	0x0089
                    008A    177 G$TL0$0$0 == 0x008a
                    008A    178 _TL0	=	0x008a
                    008B    179 G$TL1$0$0 == 0x008b
                    008B    180 _TL1	=	0x008b
                    008C    181 G$TH0$0$0 == 0x008c
                    008C    182 _TH0	=	0x008c
                    008D    183 G$TH1$0$0 == 0x008d
                    008D    184 _TH1	=	0x008d
                    00A8    185 G$IEN0$0$0 == 0x00a8
                    00A8    186 _IEN0	=	0x00a8
                    00B8    187 G$IP0$0$0 == 0x00b8
                    00B8    188 _IP0	=	0x00b8
                    0098    189 G$SCON$0$0 == 0x0098
                    0098    190 _SCON	=	0x0098
                    0099    191 G$SBUF$0$0 == 0x0099
                    0099    192 _SBUF	=	0x0099
                    00A2    193 G$AUXR1$0$0 == 0x00a2
                    00A2    194 _AUXR1	=	0x00a2
                    00A9    195 G$SADDR$0$0 == 0x00a9
                    00A9    196 _SADDR	=	0x00a9
                    00B9    197 G$SADEN$0$0 == 0x00b9
                    00B9    198 _SADEN	=	0x00b9
                    00BE    199 G$BRGR0$0$0 == 0x00be
                    00BE    200 _BRGR0	=	0x00be
                    00BF    201 G$BRGR1$0$0 == 0x00bf
                    00BF    202 _BRGR1	=	0x00bf
                    00BD    203 G$BRGCON$0$0 == 0x00bd
                    00BD    204 _BRGCON	=	0x00bd
                    00AC    205 G$CMP1$0$0 == 0x00ac
                    00AC    206 _CMP1	=	0x00ac
                    00AD    207 G$CMP2$0$0 == 0x00ad
                    00AD    208 _CMP2	=	0x00ad
                    0095    209 G$DIVM$0$0 == 0x0095
                    0095    210 _DIVM	=	0x0095
                    00E7    211 G$FMADRH$0$0 == 0x00e7
                    00E7    212 _FMADRH	=	0x00e7
                    00E6    213 G$FMADRL$0$0 == 0x00e6
                    00E6    214 _FMADRL	=	0x00e6
                    00E4    215 G$FMCON$0$0 == 0x00e4
                    00E4    216 _FMCON	=	0x00e4
                    00E5    217 G$FMDATA$0$0 == 0x00e5
                    00E5    218 _FMDATA	=	0x00e5
                    00DB    219 G$I2ADR$0$0 == 0x00db
                    00DB    220 _I2ADR	=	0x00db
                    00D8    221 G$I2CON$0$0 == 0x00d8
                    00D8    222 _I2CON	=	0x00d8
                    00DA    223 G$I2DAT$0$0 == 0x00da
                    00DA    224 _I2DAT	=	0x00da
                    00DD    225 G$I2SCLH$0$0 == 0x00dd
                    00DD    226 _I2SCLH	=	0x00dd
                    00DC    227 G$I2SCLL$0$0 == 0x00dc
                    00DC    228 _I2SCLL	=	0x00dc
                    00D9    229 G$I2STAT$0$0 == 0x00d9
                    00D9    230 _I2STAT	=	0x00d9
                    00F8    231 G$IP1$0$0 == 0x00f8
                    00F8    232 _IP1	=	0x00f8
                    00F7    233 G$IP1H$0$0 == 0x00f7
                    00F7    234 _IP1H	=	0x00f7
                    0094    235 G$KBCON$0$0 == 0x0094
                    0094    236 _KBCON	=	0x0094
                    0086    237 G$KBMASK$0$0 == 0x0086
                    0086    238 _KBMASK	=	0x0086
                    0093    239 G$KBPATN$0$0 == 0x0093
                    0093    240 _KBPATN	=	0x0093
                    0084    241 G$P0M1$0$0 == 0x0084
                    0084    242 _P0M1	=	0x0084
                    0085    243 G$P0M2$0$0 == 0x0085
                    0085    244 _P0M2	=	0x0085
                    0091    245 G$P1M1$0$0 == 0x0091
                    0091    246 _P1M1	=	0x0091
                    0092    247 G$P1M2$0$0 == 0x0092
                    0092    248 _P1M2	=	0x0092
                    00B1    249 G$P3M1$0$0 == 0x00b1
                    00B1    250 _P3M1	=	0x00b1
                    00B2    251 G$P3M2$0$0 == 0x00b2
                    00B2    252 _P3M2	=	0x00b2
                    00B5    253 G$PCONA$0$0 == 0x00b5
                    00B5    254 _PCONA	=	0x00b5
                    00F6    255 G$PT0AD$0$0 == 0x00f6
                    00F6    256 _PT0AD	=	0x00f6
                    00DF    257 G$RSTSRC$0$0 == 0x00df
                    00DF    258 _RSTSRC	=	0x00df
                    00D1    259 G$RTCCON$0$0 == 0x00d1
                    00D1    260 _RTCCON	=	0x00d1
                    00D2    261 G$RTCH$0$0 == 0x00d2
                    00D2    262 _RTCH	=	0x00d2
                    00D3    263 G$RTCL$0$0 == 0x00d3
                    00D3    264 _RTCL	=	0x00d3
                    00BA    265 G$SSTAT$0$0 == 0x00ba
                    00BA    266 _SSTAT	=	0x00ba
                    008F    267 G$TAMOD$0$0 == 0x008f
                    008F    268 _TAMOD	=	0x008f
                    0096    269 G$TRIM$0$0 == 0x0096
                    0096    270 _TRIM	=	0x0096
                    00A7    271 G$WDCON$0$0 == 0x00a7
                    00A7    272 _WDCON	=	0x00a7
                    00C1    273 G$WDL$0$0 == 0x00c1
                    00C1    274 _WDL	=	0x00c1
                    00C2    275 G$WFEED1$0$0 == 0x00c2
                    00C2    276 _WFEED1	=	0x00c2
                    00C3    277 G$WFEED2$0$0 == 0x00c3
                    00C3    278 _WFEED2	=	0x00c3
                    00B7    279 G$IP0H$0$0 == 0x00b7
                    00B7    280 _IP0H	=	0x00b7
                    00E8    281 G$IEN1$0$0 == 0x00e8
                    00E8    282 _IEN1	=	0x00e8
                            283 ;--------------------------------------------------------
                            284 ; special function bits
                            285 ;--------------------------------------------------------
                            286 	.area RSEG    (ABS,DATA)
   0000                     287 	.org 0x0000
                    00D0    288 G$PSW_0$0$0 == 0x00d0
                    00D0    289 _PSW_0	=	0x00d0
                    00D1    290 G$PSW_1$0$0 == 0x00d1
                    00D1    291 _PSW_1	=	0x00d1
                    00D2    292 G$PSW_2$0$0 == 0x00d2
                    00D2    293 _PSW_2	=	0x00d2
                    00D3    294 G$PSW_3$0$0 == 0x00d3
                    00D3    295 _PSW_3	=	0x00d3
                    00D4    296 G$PSW_4$0$0 == 0x00d4
                    00D4    297 _PSW_4	=	0x00d4
                    00D5    298 G$PSW_5$0$0 == 0x00d5
                    00D5    299 _PSW_5	=	0x00d5
                    00D6    300 G$PSW_6$0$0 == 0x00d6
                    00D6    301 _PSW_6	=	0x00d6
                    00D7    302 G$PSW_7$0$0 == 0x00d7
                    00D7    303 _PSW_7	=	0x00d7
                    008F    304 G$TCON_7$0$0 == 0x008f
                    008F    305 _TCON_7	=	0x008f
                    008E    306 G$TCON_6$0$0 == 0x008e
                    008E    307 _TCON_6	=	0x008e
                    008D    308 G$TCON_5$0$0 == 0x008d
                    008D    309 _TCON_5	=	0x008d
                    008C    310 G$TCON_4$0$0 == 0x008c
                    008C    311 _TCON_4	=	0x008c
                    008B    312 G$TCON_3$0$0 == 0x008b
                    008B    313 _TCON_3	=	0x008b
                    008A    314 G$TCON_2$0$0 == 0x008a
                    008A    315 _TCON_2	=	0x008a
                    0089    316 G$TCON_1$0$0 == 0x0089
                    0089    317 _TCON_1	=	0x0089
                    0088    318 G$TCON_0$0$0 == 0x0088
                    0088    319 _TCON_0	=	0x0088
                    00AF    320 G$IEN0_7$0$0 == 0x00af
                    00AF    321 _IEN0_7	=	0x00af
                    00AE    322 G$IEN0_6$0$0 == 0x00ae
                    00AE    323 _IEN0_6	=	0x00ae
                    00AD    324 G$IEN0_5$0$0 == 0x00ad
                    00AD    325 _IEN0_5	=	0x00ad
                    00AC    326 G$IEN0_4$0$0 == 0x00ac
                    00AC    327 _IEN0_4	=	0x00ac
                    00AB    328 G$IEN0_3$0$0 == 0x00ab
                    00AB    329 _IEN0_3	=	0x00ab
                    00AA    330 G$IEN0_2$0$0 == 0x00aa
                    00AA    331 _IEN0_2	=	0x00aa
                    00A9    332 G$IEN0_1$0$0 == 0x00a9
                    00A9    333 _IEN0_1	=	0x00a9
                    00A8    334 G$IEN0_0$0$0 == 0x00a8
                    00A8    335 _IEN0_0	=	0x00a8
                    00EA    336 G$IEN1_2$0$0 == 0x00ea
                    00EA    337 _IEN1_2	=	0x00ea
                    00E9    338 G$IEN1_1$0$0 == 0x00e9
                    00E9    339 _IEN1_1	=	0x00e9
                    00E8    340 G$IEN1_0$0$0 == 0x00e8
                    00E8    341 _IEN1_0	=	0x00e8
                    00FE    342 G$IP1_6$0$0 == 0x00fe
                    00FE    343 _IP1_6	=	0x00fe
                    00FA    344 G$IP1_2$0$0 == 0x00fa
                    00FA    345 _IP1_2	=	0x00fa
                    00F9    346 G$IP1_1$0$0 == 0x00f9
                    00F9    347 _IP1_1	=	0x00f9
                    00F8    348 G$IP1_0$0$0 == 0x00f8
                    00F8    349 _IP1_0	=	0x00f8
                    00BE    350 G$IP0_6$0$0 == 0x00be
                    00BE    351 _IP0_6	=	0x00be
                    00BD    352 G$IP0_5$0$0 == 0x00bd
                    00BD    353 _IP0_5	=	0x00bd
                    00BC    354 G$IP0_4$0$0 == 0x00bc
                    00BC    355 _IP0_4	=	0x00bc
                    00BB    356 G$IP0_3$0$0 == 0x00bb
                    00BB    357 _IP0_3	=	0x00bb
                    00BA    358 G$IP0_2$0$0 == 0x00ba
                    00BA    359 _IP0_2	=	0x00ba
                    00B9    360 G$IP0_1$0$0 == 0x00b9
                    00B9    361 _IP0_1	=	0x00b9
                    00B8    362 G$IP0_0$0$0 == 0x00b8
                    00B8    363 _IP0_0	=	0x00b8
                    0098    364 G$SCON_0$0$0 == 0x0098
                    0098    365 _SCON_0	=	0x0098
                    0099    366 G$SCON_1$0$0 == 0x0099
                    0099    367 _SCON_1	=	0x0099
                    009A    368 G$SCON_2$0$0 == 0x009a
                    009A    369 _SCON_2	=	0x009a
                    009B    370 G$SCON_3$0$0 == 0x009b
                    009B    371 _SCON_3	=	0x009b
                    009C    372 G$SCON_4$0$0 == 0x009c
                    009C    373 _SCON_4	=	0x009c
                    009D    374 G$SCON_5$0$0 == 0x009d
                    009D    375 _SCON_5	=	0x009d
                    009E    376 G$SCON_6$0$0 == 0x009e
                    009E    377 _SCON_6	=	0x009e
                    009F    378 G$SCON_7$0$0 == 0x009f
                    009F    379 _SCON_7	=	0x009f
                    00DE    380 G$I2CON_6$0$0 == 0x00de
                    00DE    381 _I2CON_6	=	0x00de
                    00DD    382 G$I2CON_5$0$0 == 0x00dd
                    00DD    383 _I2CON_5	=	0x00dd
                    00DC    384 G$I2CON_4$0$0 == 0x00dc
                    00DC    385 _I2CON_4	=	0x00dc
                    00DB    386 G$I2CON_3$0$0 == 0x00db
                    00DB    387 _I2CON_3	=	0x00db
                    00DA    388 G$I2CON_2$0$0 == 0x00da
                    00DA    389 _I2CON_2	=	0x00da
                    00D8    390 G$I2CON_0$0$0 == 0x00d8
                    00D8    391 _I2CON_0	=	0x00d8
                    0080    392 G$P0_0$0$0 == 0x0080
                    0080    393 _P0_0	=	0x0080
                    0081    394 G$P0_1$0$0 == 0x0081
                    0081    395 _P0_1	=	0x0081
                    0082    396 G$P0_2$0$0 == 0x0082
                    0082    397 _P0_2	=	0x0082
                    0083    398 G$P0_3$0$0 == 0x0083
                    0083    399 _P0_3	=	0x0083
                    0084    400 G$P0_4$0$0 == 0x0084
                    0084    401 _P0_4	=	0x0084
                    0085    402 G$P0_5$0$0 == 0x0085
                    0085    403 _P0_5	=	0x0085
                    0086    404 G$P0_6$0$0 == 0x0086
                    0086    405 _P0_6	=	0x0086
                    0087    406 G$P0_7$0$0 == 0x0087
                    0087    407 _P0_7	=	0x0087
                    0090    408 G$P1_0$0$0 == 0x0090
                    0090    409 _P1_0	=	0x0090
                    0091    410 G$P1_1$0$0 == 0x0091
                    0091    411 _P1_1	=	0x0091
                    0092    412 G$P1_2$0$0 == 0x0092
                    0092    413 _P1_2	=	0x0092
                    0093    414 G$P1_3$0$0 == 0x0093
                    0093    415 _P1_3	=	0x0093
                    0094    416 G$P1_4$0$0 == 0x0094
                    0094    417 _P1_4	=	0x0094
                    0095    418 G$P1_5$0$0 == 0x0095
                    0095    419 _P1_5	=	0x0095
                    0096    420 G$P1_6$0$0 == 0x0096
                    0096    421 _P1_6	=	0x0096
                    0097    422 G$P1_7$0$0 == 0x0097
                    0097    423 _P1_7	=	0x0097
                    00B0    424 G$P3_0$0$0 == 0x00b0
                    00B0    425 _P3_0	=	0x00b0
                    00B1    426 G$P3_1$0$0 == 0x00b1
                    00B1    427 _P3_1	=	0x00b1
                            428 ;--------------------------------------------------------
                            429 ; overlayable register banks
                            430 ;--------------------------------------------------------
                            431 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     432 	.ds 8
                            433 ;--------------------------------------------------------
                            434 ; internal ram data
                            435 ;--------------------------------------------------------
                            436 	.area DSEG    (DATA)
                            437 ;--------------------------------------------------------
                            438 ; overlayable items in internal ram 
                            439 ;--------------------------------------------------------
                            440 	.area OSEG    (OVR,DATA)
                            441 ;--------------------------------------------------------
                            442 ; indirectly addressable internal ram data
                            443 ;--------------------------------------------------------
                            444 	.area ISEG    (DATA)
                            445 ;--------------------------------------------------------
                            446 ; absolute internal ram data
                            447 ;--------------------------------------------------------
                            448 	.area IABS    (ABS,DATA)
                            449 	.area IABS    (ABS,DATA)
                            450 ;--------------------------------------------------------
                            451 ; bit data
                            452 ;--------------------------------------------------------
                            453 	.area BSEG    (BIT)
                            454 ;--------------------------------------------------------
                            455 ; paged external ram data
                            456 ;--------------------------------------------------------
                            457 	.area PSEG    (PAG,XDATA)
                            458 ;--------------------------------------------------------
                            459 ; external ram data
                            460 ;--------------------------------------------------------
                            461 	.area XSEG    (XDATA)
                            462 ;--------------------------------------------------------
                            463 ; absolute external ram data
                            464 ;--------------------------------------------------------
                            465 	.area XABS    (ABS,XDATA)
                            466 ;--------------------------------------------------------
                            467 ; external initialized ram data
                            468 ;--------------------------------------------------------
                            469 	.area XISEG   (XDATA)
                            470 	.area HOME    (CODE)
                            471 	.area GSINIT0 (CODE)
                            472 	.area GSINIT1 (CODE)
                            473 	.area GSINIT2 (CODE)
                            474 	.area GSINIT3 (CODE)
                            475 	.area GSINIT4 (CODE)
                            476 	.area GSINIT5 (CODE)
                            477 	.area GSINIT  (CODE)
                            478 	.area GSFINAL (CODE)
                            479 	.area CSEG    (CODE)
                            480 ;--------------------------------------------------------
                            481 ; global & static initialisations
                            482 ;--------------------------------------------------------
                            483 	.area HOME    (CODE)
                            484 	.area GSINIT  (CODE)
                            485 	.area GSFINAL (CODE)
                            486 	.area GSINIT  (CODE)
                            487 ;--------------------------------------------------------
                            488 ; Home
                            489 ;--------------------------------------------------------
                            490 	.area HOME    (CODE)
                            491 	.area HOME    (CODE)
                            492 ;--------------------------------------------------------
                            493 ; code
                            494 ;--------------------------------------------------------
                            495 	.area CSEG    (CODE)
                            496 ;------------------------------------------------------------
                            497 ;Allocation info for local variables in function 'spi_in_out'
                            498 ;------------------------------------------------------------
                            499 ;daten                     Allocated to registers r7 
                            500 ;n                         Allocated to registers r6 
                            501 ;------------------------------------------------------------
                    0000    502 	G$spi_in_out$0$0 ==.
                    0000    503 	C$spi.c$59$0$0 ==.
                            504 ;	../spi.c:59: unsigned char spi_in_out(void)
                            505 ;	-----------------------------------------
                            506 ;	 function spi_in_out
                            507 ;	-----------------------------------------
   0000                     508 _spi_in_out:
                    0007    509 	ar7 = 0x07
                    0006    510 	ar6 = 0x06
                    0005    511 	ar5 = 0x05
                    0004    512 	ar4 = 0x04
                    0003    513 	ar3 = 0x03
                    0002    514 	ar2 = 0x02
                    0001    515 	ar1 = 0x01
                    0000    516 	ar0 = 0x00
                    0000    517 	C$spi.c$61$1$0 ==.
                            518 ;	../spi.c:61: unsigned char daten=0, n;
   0000 7F 00               519 	mov	r7,#0x00
                    0002    520 	C$spi.c$63$1$1 ==.
                            521 ;	../spi.c:63: READ=1;
   0002 D2 82               522 	setb	_P0_2
                    0004    523 	C$spi.c$64$1$1 ==.
                            524 ;	../spi.c:64: WRITE=0;
   0004 C2 85               525 	clr	_P0_5
                    0006    526 	C$spi.c$66$1$1 ==.
                            527 ;	../spi.c:66: do
   0006                     528 00105$:
                    0006    529 	C$spi.c$69$2$2 ==.
                            530 ;	../spi.c:69: if(interrupted){
   0006 30*00 06            531 	jnb	_interrupted,00117$
                    0009    532 	C$spi.c$70$3$3 ==.
                            533 ;	../spi.c:70: READ=0;
   0009 C2 82               534 	clr	_P0_2
                    000B    535 	C$spi.c$71$3$3 ==.
                            536 ;	../spi.c:71: READ=1;
   000B D2 82               537 	setb	_P0_2
                    000D    538 	C$spi.c$72$3$3 ==.
                            539 ;	../spi.c:72: interrupted=0;
   000D C2*00               540 	clr	_interrupted
                    000F    541 	C$spi.c$75$1$1 ==.
                            542 ;	../spi.c:75: for(n=0;n<=7;n++)
   000F                     543 00117$:
   000F 7E 00               544 	mov	r6,#0x00
   0011                     545 00108$:
   0011 EE                  546 	mov	a,r6
   0012 24 F8               547 	add	a,#0xff - 0x07
   0014 40 12               548 	jc	00106$
                    0016    549 	C$spi.c$77$3$4 ==.
                            550 ;	../spi.c:77: CLK=0;
   0016 C2 80               551 	clr	_P0_0
                    0018    552 	C$spi.c$78$3$4 ==.
                            553 ;	../spi.c:78: daten<<=1;
   0018 EF                  554 	mov	a,r7
   0019 2F                  555 	add	a,r7
   001A FF                  556 	mov	r7,a
                    001B    557 	C$spi.c$79$3$4 ==.
                            558 ;	../spi.c:79: if (SER_IN) daten++;
   001B 30 81 01            559 	jnb	_P0_1,00104$
   001E 0F                  560 	inc	r7
   001F                     561 00104$:
                    001F    562 	C$spi.c$80$3$4 ==.
                            563 ;	../spi.c:80: SER_OUT=SER_IN;
   001F A2 81               564 	mov	c,_P0_1
   0021 92 83               565 	mov	_P0_3,c
                    0023    566 	C$spi.c$81$3$4 ==.
                            567 ;	../spi.c:81: CLK=1;
   0023 D2 80               568 	setb	_P0_0
                    0025    569 	C$spi.c$75$2$2 ==.
                            570 ;	../spi.c:75: for(n=0;n<=7;n++)
   0025 0E                  571 	inc	r6
   0026 80 E9               572 	sjmp	00108$
   0028                     573 00106$:
                    0028    574 	C$spi.c$84$1$1 ==.
                            575 ;	../spi.c:84: }while (interrupted);
   0028 20*00 DB            576 	jb	_interrupted,00105$
                    002B    577 	C$spi.c$86$1$1 ==.
                            578 ;	../spi.c:86: READ=0;
   002B C2 82               579 	clr	_P0_2
                    002D    580 	C$spi.c$87$1$1 ==.
                            581 ;	../spi.c:87: WRITE=1;
   002D D2 85               582 	setb	_P0_5
                    002F    583 	C$spi.c$89$1$1 ==.
                            584 ;	../spi.c:89: return daten;
   002F 8F 82               585 	mov	dpl,r7
                    0031    586 	C$spi.c$91$1$1 ==.
                    0031    587 	XG$spi_in_out$0$0 ==.
   0031 22                  588 	ret
                            589 	.area CSEG    (CODE)
                            590 	.area CONST   (CODE)
                            591 	.area XINIT   (CODE)
                            592 	.area CABS    (ABS,CODE)
